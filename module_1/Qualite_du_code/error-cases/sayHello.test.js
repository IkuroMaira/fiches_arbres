import { expect, test } from 'vitest'import { describe, it, expect} from "vitest";import { sayHello } from './sayHello'describe('Cas de démarrage #1 - Dire bonjour avec un prénom', () => {    it('should be return Bonjour Leïla', () => {        expect(expect(sayHello("Laïla")).toBe("Bonjour, Laïla !"));    });    it('should be return it\'s not a string', () => {        expect(sayHello(42)).toBe("Error : ceci n'est pas un string");    });    it('should be return the character string is too long', () => {        expect(sayHello("Tu es grande, ma grande ! Aujourd'hui tu es belle")).toBe("Error : chaîne de caractères trop" +            " longue");    });    it('should be return void', () => {        expect(sayHello("")).toBe("Error : le champ est vide");    });    it('should be return void value', () => {        expect(sayHello(null)).toBe("Error : la valeur est nulle");    });})// OLD VERSION :// test('Cas de démarrage #1 - Dire bonjour avec un prénom', () => {//     expect(sayHello("Laïla")).toBe("Bonjour, Laïla !");//     expect(sayHello(42)).toBe("Error : ceci n'est pas un string");//     expect(sayHello("Tu es grande, ma grande ! Aujourd'hui tu es belle")).toBe("Error : chaîne de caractères trop" +//         " longue");//     expect(sayHello("")).toBe("Error : le champ est vide");//     expect(sayHello(null)).toBe("Error : la valeur est nulle");//     expect(sayHello("Gwen a 42 ans")).toBe("Error: Le prénom comporte des espaces");// })// Il est mieux d'écire ainsi// describe('fizzBuzz function', () => { // Ici on décrit qu'est ce qu'on teste ou quelle focntion pour la clareté du code//     it('should be return ....'), () => {//         expect(fizzbuzz(15)).toBe('FizzBuzz!');//     }// })// Et pour chaque cas de test il faut utiliser 'it'